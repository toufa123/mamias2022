version: '3.8'
services:
  #######################################
  # PHP application Docker container
  #######################################
  app:
    container_name: "${name}_app"
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile.development
    links:
      - mail
      - mysql
      #- postgres
      #- solr
      #- elasticsearch
      #- redis
      #- memcached
      #- ftp
    ports:
      - "${ngnix80port}:80"
      - "${ngnix443port}:443"
    volumes:
      - ./app/:/app/
      - ./:/docker/
    # cap and privileged needed for slowlog
    cap_add:
      - SYS_PTRACE
    privileged: true
    env_file:
      - etc/environment.yml
      - etc/environment.development.yml
    labels:
      - "traefik.http.routers.${name}.rule=Host(`${name}.docker.localhost`)"


  #######################################
  # MySQL server
  #######################################
  mysql:
    build:
      context: docker/mysql/
      #dockerfile: MySQL-5.5.Dockerfile
      dockerfile: MySQL-5.6.Dockerfile
      #dockerfile: MySQL-5.7.Dockerfile
      #dockerfile: MariaDB-5.5.Dockerfile
      #dockerfile: MariaDB-10.Dockerfile
      #dockerfile: Percona-5.5.Dockerfile
      #dockerfile: Percona-5.6.Dockerfile
      #dockerfile: Percona-5.7.Dockerfile
    ports:
      - 13306:3306
    volumes:
      - mysql:/var/lib/mysql
    env_file:
      - etc/environment.yml
      - etc/environment.development.yml

  #######################################
  # PostgreSQL server
  #######################################
  postgres:
    container_name: "${name}_database"
    restart: on-failure
    image: kartoza/postgis:12.0
    #  build:
    #    context: docker/postgres/
    #    dockerfile: Postgres-9.4.Dockerfile
    #    dockerfile: Postgres-9.5.Dockerfile
    ports:
      - "${pg_port}:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - ALLOW_IP_RANGE=0.0.0.0/0
      - DB_HOST=postgres
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_mamias
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis
      - DEFAULT_ENCODING="UTF8"
    env_file:
      - etc/environment.yml
      - etc/environment.production.yml
    command: bash -c "while [ ! -f /docker-entrypoin-initdb.d/public.sql ]; do sleep 1; done && /docker-entrypoint.sh"

      #######################################
      # Solr server
      #######################################
      #solr:
      #  build:
      #    context: docker/solr/
      #  volumes:
      #    - solr:/opt/solr/server/solr/data
      #  env_file:
  #    - etc/environment.yml
  #    - etc/environment.development.yml
  #  environment:
  #    - SOLR_STORAGE=/opt/solr/server/solr/data
  #    - VIRTUAL_HOST=solr.boilerplate.docker
  #    - VIRTUAL_PORT=8983

  #######################################
  # Tika server
  #######################################
  #tika:
  #  build:
  #    context: docker/tika/
  #  ports:
  #    - 19998:9998

  #######################################
  # Elasticsearch
  #######################################
  #elasticsearch:
  #  build:
  #    context: docker/elasticsearch/
  #  ports:
  #    - 19200:9200
  #    - 19300:9300
  #  volumes:
  #    - elasticsearch:/usr/share/elasticsearch/data
  #  env_file:
  #    - etc/environment.yml
  #    - etc/environment.development.yml
  #  environment:
  #    - VIRTUAL_HOST=elasticsearch.boilerplate.docker
  #    - VIRTUAL_PORT=9200

  #######################################
  # Redis
  #######################################
  #redis:
  #  build:
  #    context: docker/redis/
  #  volumes:
  #    - redis:/data
  #  env_file:
  #    - etc/environment.yml
  #    - etc/environment.development.yml

  #######################################
  # Memcached
  #######################################
  #memcached:
      #  build:
      #    context: docker/memcached/
      #  env_file:
      #    - etc/environment.yml
      #    - etc/environment.development.yml

      #######################################
      # Mail
      #######################################
      # Mailhog
      #mail:
      #image: mailhog/mailhog
      #  ports:
      #    - 8025:8025
      #environment:
      #- VIRTUAL_HOST=mail.boilerplate.docker
    #- VIRTUAL_PORT=8025

  # Mailcatcher
  #mail:
  #  image: schickling/mailcatcher
  #  environment:
  #    - VIRTUAL_HOST=mail.boilerplate.docker
  #    - VIRTUAL_PORT=1080


  # Mailsandbox
  #mail:
  #  image: webdevops/mail-sandbox
  #  environment:
  #    - VIRTUAL_HOST=mail.boilerplate.docker
  #    - VIRTUAL_PORT=80

  #######################################
  # FTP (vsftpd)
  #######################################
  #ftp:
  #  build:
  #    context: docker/vsftpd/
  #  volumes:
  #    - ./:/application/
  #  env_file:
  #    - etc/environment.yml
  #    - etc/environment.development.yml



  #######################################
  # Traefik
  #######################################
  traefik:
    image: traefik:latest
    container_name: "${name}_traefik"
    restart: on-failure
    command: --api.insecure=true --providers.docker
    ports:
      #- '8000:80'
      - '${traefik_port}:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  #postgres_data:
  #pgadmin:
  mamias_postgres:
    name: ${name}_data # Real ending name
    external: false


